# test_final_diagnostics.py
import sys
import os
sys.path.append(os.path.dirname(__file__))

from modules.vehicle_diagnostics import VehicleDiagnostics
from modules.diagnostic_repository import DiagnosticRepository
from utils.port_finder import find_obd_ports

def final_test_with_adapter():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–¥–∞–ø—Ç–µ—Ä–∞"""
    print("üöõ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ DIAGNOSTICS MODULE")
    print("=" * 55)
    
    # –ü–æ–∏—Å–∫ –ø–æ—Ä—Ç–æ–≤
    ports = find_obd_ports()
    
    if not ports:
        print("‚ùå –ê–¥–∞–ø—Ç–µ—Ä –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   1. –ü–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ ELM327 –∫ OBD2")
        print("   2. –í–∫–ª—é—á–µ–Ω–æ –ª–∏ –∑–∞–∂–∏–≥–∞–Ω–∏–µ")
        print("   3. –°–æ–ø—Ä—è–∂–µ–Ω –ª–∏ Bluetooth")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –∫–∞–∂–¥–æ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
    for port in ports:
        print(f"\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç—É: {port}")
        
        diag = VehicleDiagnostics(simulation_mode=False)
        repo = DiagnosticRepository()
        
        if diag.connect(port):
            print(f"‚úÖ –£–°–ü–ï–®–ù–û–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ù–ê {port}")
            
            # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
            vehicle_info = diag.get_vehicle_info()
            live_data = diag.read_live_data()
            truck_data = diag.read_truck_specific_data()
            dtc_codes = diag.read_dtc_codes()
            j1939_support = diag.check_j1939_support()
            
            print(f"üöó VIN: {vehicle_info.get('vin', 'N/A')}")
            print(f"üì° –ü—Ä–æ—Ç–æ–∫–æ–ª: {vehicle_info.get('protocol', 'N/A')}")
            print(f"üîå J1939 –ø–æ–¥–¥–µ—Ä–∂–∫–∞: {'‚úÖ –î–ê' if j1939_support else '‚ùå –ù–ï–¢'}")
            
            print(f"\nüìä –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {len(live_data.get('parameters', {}))}")
            print(f"‚ö†Ô∏è  –û—à–∏–±–æ–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: {dtc_codes.get('count', 0)}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
            diagnostic_report = {
                "vehicle_info": vehicle_info,
                "live_data": live_data,
                "truck_data": truck_data,
                "dtc_codes": dtc_codes,
                "j1939_support": j1939_support
            }
            
            repo.save_diagnostic_session(vehicle_info, diagnostic_report)
            print("üíæ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
            
            diag.disconnect()
            break  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ {port}")

if __name__ == "__main__":
    final_test_with_adapter()