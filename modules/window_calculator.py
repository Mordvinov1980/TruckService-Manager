# üìÅ modules/window_calculator.py
# [file content begin]
"""
ü™ü –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –û–ö–û–ù - –ü–†–û–î–í–ò–ù–£–¢–´–ô –≠–°–ö–ò–ó
"""

import math
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import mm
from reportlab.lib.colors import black, gray, silver

class WindowCalculator:
    def __init__(self):
        # –ë–∞–∑–∞ —Ü–µ–Ω
        self.prices = {
            'profiles': {'econom': 2500, 'standard': 3200, 'premium': 4200},
            'glass': {'single': 1800, 'double': 2400, 'energy': 3200},
            'fittings': {'basic': 2000, 'comfort': 3000, 'security': 4500}
        }
        
        self.names = {
            'profiles': {'econom': '–≠–∫–æ–Ω–æ–º', 'standard': '–°—Ç–∞–Ω–¥–∞—Ä—Ç', 'premium': '–ü—Ä–µ–º–∏—É–º'},
            'glass': {'single': '–û–¥–Ω–æ–∫–∞–º–µ—Ä–Ω—ã–π', 'double': '–î–≤—É—Ö–∫–∞–º–µ—Ä–Ω—ã–π', 'energy': '–≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–π'},
            'fittings': {'basic': '–ë–∞–∑–æ–≤–∞—è', 'comfort': '–ö–æ–º—Ñ–æ—Ä—Ç', 'security': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'}
        }

    def calculate_window(self, width, height, profile, glass, fittings):
        """–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–∫–Ω–∞"""
        try:
            area = (width * height) / 1000000
            profile_cost = area * self.prices['profiles'][profile]
            glass_cost = area * self.prices['glass'][glass]
            fittings_cost = self.prices['fittings'][fittings]
            total = profile_cost + glass_cost + fittings_cost
            
            return {
                'area': area,
                'profile_cost': profile_cost,
                'glass_cost': glass_cost,
                'fittings_cost': fittings_cost,
                'total': round(total)
            }
        except Exception as e:
            return {'error': str(e)}

    def create_detailed_window_pdf(self, width, height, profile, glass, fittings, 
                                 calculation, filename='window_detailed.pdf'):
        """–°–æ–∑–¥–∞–Ω–∏–µ PDF —Å –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —ç—Å–∫–∏–∑–æ–º –æ–∫–Ω–∞"""
        try:
            c = canvas.Canvas(filename, pagesize=A4)
            width_pdf, height_pdf = A4
            
            # ===== –ó–ê–ì–û–õ–û–í–û–ö =====
            c.setFont("Helvetica-Bold", 16)
            c.drawString(50, height_pdf - 40, "–î–ï–¢–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –≠–°–ö–ò–ó –û–ö–ù–ê")
            
            # ===== –û–°–ù–û–í–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ –≠–°–ö–ò–ó–ê =====
            frame_x = 80  # –ø–æ–∑–∏—Ü–∏—è X —Ä–∞–º–∫–∏
            frame_y = height_pdf - 250  # –ø–æ–∑–∏—Ü–∏—è Y —Ä–∞–º–∫–∏
            frame_width = 200  # —à–∏—Ä–∏–Ω–∞ —Ä–∞–º–∫–∏ –≤ PDF
            frame_height = 150  # –≤—ã—Å–æ—Ç–∞ —Ä–∞–º–∫–∏ –≤ PDF
            
            # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∫ —Ä–∞–∑–º–µ—Ä–∞–º –≤ PDF
            scale_x = frame_width / width
            scale_y = frame_height / height
            scale = min(scale_x, scale_y) * 0.9  # –∑–∞–ø–∞—Å 10%
            
            # ===== 1. –û–°–ù–û–í–ù–ê–Ø –†–ê–ú–ê (—Ç–æ–ª—Å—Ç–∞—è) =====
            c.setLineWidth(2.5)
            c.setStrokeColor(black)
            c.rect(frame_x, frame_y, frame_width, frame_height)
            
            # ===== 2. –ü–†–û–§–ò–õ–¨ –†–ê–ú–´ (–¥–≤–æ–π–Ω–∞—è –ª–∏–Ω–∏—è) =====
            c.setLineWidth(1)
            c.setStrokeColor(gray)
            profile_offset = 3
            c.rect(frame_x + profile_offset, frame_y + profile_offset, 
                   frame_width - 2*profile_offset, frame_height - 2*profile_offset)
            
            # ===== 3. –ò–ú–ü–û–°–¢–´ (–ø–µ—Ä–µ–≥–æ—Ä–æ–¥–∫–∏) =====
            c.setLineWidth(1.2)
            c.setStrokeColor(black)
            
            # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Å—Ç—ã
            impost_x_positions = [frame_x + frame_width/3, frame_x + 2*frame_width/3]
            for x_pos in impost_x_positions:
                c.line(x_pos, frame_y, x_pos, frame_y + frame_height)
            
            # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Å—Ç—ã
            impost_y_positions = [frame_y + frame_height/3, frame_y + 2*frame_height/3]
            for y_pos in impost_y_positions:
                c.line(frame_x, y_pos, frame_x + frame_width, y_pos)
            
            # ===== 4. –°–¢–í–û–†–ö–ò (–æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è —á–∞—Å—Ç–∏) =====
            c.setLineWidth(0.8)
            c.setStrokeColor(silver)
            
            # –õ–µ–≤–∞—è —Å—Ç–≤–æ—Ä–∫–∞
            sash_margin = 8
            sash_width = frame_width/3 - sash_margin
            sash_height = frame_height - 2*sash_margin
            
            # –í–µ—Ä—Ö–Ω—è—è –ª–µ–≤–∞—è —Å—Ç–≤–æ—Ä–∫–∞
            c.rect(frame_x + sash_margin/2, frame_y + frame_height*2/3 + sash_margin/2, 
                   sash_width, frame_height/3 - sash_margin)
            
            # –ù–∏–∂–Ω—è—è –ª–µ–≤–∞—è —Å—Ç–≤–æ—Ä–∫–∞  
            c.rect(frame_x + sash_margin/2, frame_y + sash_margin/2, 
                   sash_width, frame_height/3 - sash_margin)
            
            # –ü—Ä–∞–≤–∞—è —Å—Ç–≤–æ—Ä–∫–∞
            c.rect(frame_x + 2*frame_width/3 + sash_margin/2, frame_y + sash_margin/2,
                   sash_width, frame_height - sash_margin)
            
            # ===== 5. –†–£–ß–ö–ò –ò –§–£–†–ù–ò–¢–£–†–ê =====
            c.setFillColor(black)
            
            # –†—É—á–∫–∏ –Ω–∞ –ª–µ–≤—ã—Ö —Å—Ç–≤–æ—Ä–∫–∞—Ö
            handle_radius = 2
            left_handles = [
                (frame_x + frame_width/6, frame_y + frame_height*5/6),  # –≤–µ—Ä—Ö–Ω—è—è –ª–µ–≤–∞—è
                (frame_x + frame_width/6, frame_y + frame_height/6)     # –Ω–∏–∂–Ω—è—è –ª–µ–≤–∞—è
            ]
            
            for handle_x, handle_y in left_handles:
                c.circle(handle_x, handle_y, handle_radius, fill=1)
                # –õ–∏–Ω–∏—è –æ—Ç —Ä—É—á–∫–∏
                c.line(handle_x, handle_y, handle_x + 10, handle_y)
            
            # –†—É—á–∫–∞ –Ω–∞ –ø—Ä–∞–≤–æ–π —Å—Ç–≤–æ—Ä–∫–µ
            right_handle_x = frame_x + frame_width*5/6
            right_handle_y = frame_y + frame_height/2
            c.circle(right_handle_x, right_handle_y, handle_radius, fill=1)
            c.line(right_handle_x, right_handle_y, right_handle_x - 10, right_handle_y)
            
            # ===== 6. –†–ê–ó–ú–ï–†–ù–´–ï –õ–ò–ù–ò–ò =====
            c.setLineWidth(0.5)
            c.setStrokeColor(gray)
            dim_offset = 15
            
            # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            c.line(frame_x - dim_offset, frame_y, frame_x - dim_offset, frame_y + frame_height)
            c.line(frame_x + frame_width + dim_offset, frame_y, frame_x + frame_width + dim_offset, frame_y + frame_height)
            
            # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            c.line(frame_x, frame_y - dim_offset, frame_x + frame_width, frame_y - dim_offset)
            c.line(frame_x, frame_y + frame_height + dim_offset, frame_x + frame_width, frame_y + frame_height + dim_offset)
            
            # ===== 7. –ü–û–î–ü–ò–°–ò –†–ê–ó–ú–ï–†–û–í =====
            c.setFont("Helvetica", 8)
            c.setFillColor(black)
            
            # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏
            c.drawString(frame_x - 35, frame_y + frame_height/2 - 5, f"{height} –º–º")
            c.drawString(frame_x + frame_width + 20, frame_y + frame_height/2 - 5, f"{height} –º–º")
            
            # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏
            c.drawString(frame_x + frame_width/2 - 15, frame_y - 20, f"{width} –º–º")
            c.drawString(frame_x + frame_width/2 - 15, frame_y + frame_height + 15, f"{width} –º–º")
            
            # ===== 8. –õ–ï–ì–ï–ù–î–ê –ò –û–ë–û–ó–ù–ê–ß–ï–ù–ò–Ø =====
            legend_y = frame_y - 80
            c.setFont("Helvetica-Bold", 10)
            c.drawString(50, legend_y, "–û–ë–û–ó–ù–ê–ß–ï–ù–ò–Ø:")
            legend_y -= 15
            
            c.setFont("Helvetica", 9)
            legends = [
                "‚ñ™ –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–º–∞",
                "‚ñ™ –ò–º–ø–æ—Å—Ç—ã", 
                "‚ñ™ –°—Ç–≤–æ—Ä–∫–∏",
                "‚óè –†—É—á–∫–∏",
                "‚îÄ –†–∞–∑–º–µ—Ä–Ω—ã–µ –ª–∏–Ω–∏–∏"
            ]
            
            for i, legend in enumerate(legends):
                c.drawString(50 + (i % 2) * 120, legend_y - (i // 2) * 15, legend)
            
            # ===== 9. –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï =====
            tech_y = legend_y - 50
            c.setFont("Helvetica-Bold", 12)
            c.drawString(50, tech_y, "–¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò:")
            tech_y -= 20
            
            c.setFont("Helvetica", 10)
            tech_data = [
                f"–†–∞–∑–º–µ—Ä: {width} √ó {height} –º–º",
                f"–ü–ª–æ—â–∞–¥—å: {calculation['area']:.2f} –º¬≤",
                f"–ü—Ä–æ—Ñ–∏–ª—å: {self.names['profiles'][profile]}",
                f"–°—Ç–µ–∫–ª–æ–ø–∞–∫–µ—Ç: {self.names['glass'][glass]}",
                f"–§—É—Ä–Ω–∏—Ç—É—Ä–∞: {self.names['fittings'][fittings]}"
            ]
            
            for i, data in enumerate(tech_data):
                c.drawString(50, tech_y - i * 15, data)
            
            # ===== 10. –°–¢–û–ò–ú–û–°–¢–¨ =====
            cost_y = tech_y - 80
            c.setFont("Helvetica-Bold", 14)
            c.drawString(50, cost_y, f"–ò–¢–û–ì–û: {calculation['total']} —Ä—É–±.")
            cost_y -= 20
            
            c.setFont("Helvetica", 10)
            c.drawString(50, cost_y - 15, f"–ü—Ä–æ—Ñ–∏–ª—å: {calculation['profile_cost']:.0f} —Ä—É–±.")
            c.drawString(50, cost_y - 30, f"–°—Ç–µ–∫–ª–æ–ø–∞–∫–µ—Ç: {calculation['glass_cost']:.0f} —Ä—É–±.")
            c.drawString(50, cost_y - 45, f"–§—É—Ä–Ω–∏—Ç—É—Ä–∞: {calculation['fittings_cost']:.0f} —Ä—É–±.")
            
            # ===== 11. –ö–û–ú–ú–ï–†–ß–ï–°–ö–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï =====
            c.setFont("Helvetica-Bold", 10)
            c.drawString(50, 80, "–ö–û–ú–ú–ï–†–ß–ï–°–ö–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï")
            c.setFont("Helvetica", 9)
            c.drawString(50, 65, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 30 –¥–Ω–µ–π")
            c.drawString(50, 50, "–ö–æ–Ω—Ç–∞–∫—Ç—ã: +7 (XXX) XXX-XX-XX")
            
            c.save()
            return filename
            
        except Exception as e:
            return f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF: {str(e)}"

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
calculator = WindowCalculator()
# [file content end]