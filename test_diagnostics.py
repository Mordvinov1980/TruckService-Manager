# test_diagnostics.py - –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
import sys
import os
sys.path.append(os.path.dirname(__file__))

from modules.vehicle_diagnostics import VehicleDiagnostics
from modules.diagnostic_repository import DiagnosticRepository

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –±–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π"""
    print("üöõ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ACTROS MP4")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    diag = VehicleDiagnostics()
    repo = DiagnosticRepository()
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if diag.connect():
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ELM327 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
        vehicle_info = diag.get_vehicle_info()
        live_data = diag.read_live_data()
        dtc_codes = diag.read_dtc_codes()
        
        print(f"üöó VIN: {vehicle_info.get('vin', 'N/A')}")
        print(f"üì° –ü—Ä–æ—Ç–æ–∫–æ–ª: {vehicle_info.get('protocol', 'N/A')}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        print("\nüìä –û–°–ù–û–í–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´:")
        key_params = ['rpm', 'speed', 'coolant_temp', 'engine_load']
        for param in key_params:
            if param in live_data.get('parameters', {}):
                value_data = live_data['parameters'][param]
                print(f"   {param}: {value_data['value']} {value_data['units']}")
        
        # –ö–æ–¥—ã –æ—à–∏–±–æ–∫
        if dtc_codes.get('count', 0) > 0:
            print(f"\n‚ö†Ô∏è  –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò: {dtc_codes['count']} —à—Ç.")
            for code in dtc_codes.get('codes', []):
                print(f"   {code}")
        else:
            print("\n‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        diagnostic_data = {
            "vehicle_info": vehicle_info,
            "live_data": live_data,
            "dtc_codes": dtc_codes
        }
        
        repo.save_diagnostic_session(vehicle_info, diagnostic_data)
        print(f"\nüíæ –î–∞–Ω–Ω—ã–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        
        diag.disconnect()
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ELM327")

if __name__ == "__main__":
    quick_test()